<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:ZapanControls.Controls"
                    xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
                    xmlns:b="clr-namespace:ZapanControls.Behaviours">

    <Storyboard x:Key="Timeline1">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Timeline2">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- STYLE - Button Glass -->
    <Style TargetType="{x:Type l:ZapButtonGlass}">
        <Setter Property="Background" Value="#7F000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="MediumPurple"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapButtonGlass}">
                    <Border x:Name="PART_Border"  CornerRadius="4,4,4,4"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.507*"/>
                                <RowDefinition Height="0.493*"/>
                            </Grid.RowDefinitions>

                            <ContentPresenter x:Name="PART_Content" 
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              Opacity="1"
                                              Width="Auto" 
                                              Grid.RowSpan="2" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                              Margin="{TemplateBinding Padding}" />

                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="-0.368" Y="-0.152"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#7FFFFFFF" Offset="0.25"/>
                                        <GradientStop Color="#00DB8DFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>

                            <Border x:Name="shine" HorizontalAlignment="Stretch" Margin="0" Width="Auto" CornerRadius="3,3,0,0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                        <GradientStop Color="#99FFFFFF" Offset="0"/>
                                        <GradientStop Color="#33FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Content" Property="Opacity" Value="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="Opacity"  Value="0.8"/>
                            <Setter TargetName="shine" Property="Opacity"  Value="0.4"/>
                            <Setter TargetName="glow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Content" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- STYLE - Button Flat -->
    <Style TargetType="{x:Type l:ZapButtonFlat}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Opacity" Value="0.75" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapButtonFlat}">
                    <Border x:Name="PART_Border" Margin="0" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"                            
                            Background="{TemplateBinding Background}">
                        
                        <ContentPresenter x:Name="PART_Content"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Opacity="{TemplateBinding Opacity}" />
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{Binding IsPressedBackground.Color, RelativeSource={RelativeSource TemplatedParent}}" 
                                                     Opacity="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>


                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{Binding IsPressedBackground.Color, RelativeSource={RelativeSource TemplatedParent}}" 
                                                     Opacity="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                    
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <!-- STYLE - Button Round -->
    <Style TargetType="{x:Type l:ZapButtonRound}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapButtonRound}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <!-- Background Layer -->
                        <Ellipse Name="background" 
                                 Fill="{TemplateBinding Background}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                 UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                        <!-- Reflection Layer -->
                        <Path x:Name="ReflectionLayer"
                              VerticalAlignment="Top"
                              Stretch="Fill"
                              MinHeight="{TemplateBinding MinHeight}"
                              MinWidth="{TemplateBinding MinWidth}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="0.5" />
                            </Path.RenderTransform>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                        <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="75.860,47.685" Point2="69.111,45.196" Point3="50.167,45.196"/>
                                        <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="7.469,52.580" Point2="1.000,53.252" Point3="1.000,44.999"/>
                                        <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="9.106,14.370" Point2="27.875,0" Point3="50,0"/>
                                        <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="99.139,39.369" Point2="98.999,40.084" Point3="98.999,45.499"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                            <Path.Fill>
                                <RadialGradientBrush GradientOrigin="0.498,0.526">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                            <TranslateTransform X="0" Y="0.5"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                    <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                    <GradientStop Offset="0" Color="#00000000"/>
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                        <!-- Refraction Layer -->
                        <Ellipse x:Name="RefractionLayer"
                                 Margin="-1"
                                 StrokeThickness="{Binding Path=BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                 Stroke="{TemplateBinding BorderBrush}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                 UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.496,1.052">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="#00000000"/>
                                    <GradientStop Offset="0.4" Color="#FFFFFFFF"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!-- ContentPresenter -->
                        <ContentPresenter Name="PART_Content" Margin="1,1,1,0"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="background" Property="Fill" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="RefractionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.45" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#BBFFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="background" Property="Fill" Value="{Binding IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="RefractionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#CCFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#66FFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="background" Property="Fill" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_Content" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--===================================================================================================================================================-->

    <!-- STYLE - DropDown Glass -->
    <Style x:Key="DropDownGlassStyle" TargetType="{x:Type l:ZapButtonGlass}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapButtonGlass}">
                    <Border x:Name="PART_Border"  CornerRadius="0,4,4,0"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.507*"/>
                                <RowDefinition Height="0.493*"/>
                            </Grid.RowDefinitions>

                            <Path x:Name="path"
                                  Grid.RowSpan="2" 
                                  Data="M0,0L3,3 6,0z" 
                                  Margin="0,2,0,0" 
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="{TemplateBinding Foreground}" 
                                  Fill="{TemplateBinding Foreground}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>

                            <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="0,4,4,0" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="-0.368" Y="-0.152"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#7FFFFFFF" Offset="0.25"/>
                                        <GradientStop Color="#00DB8DFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>

                            <Border x:Name="shine" HorizontalAlignment="Stretch" Margin="0" Width="Auto" CornerRadius="0,3,0,0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                        <GradientStop Color="#99FFFFFF" Offset="0"/>
                                        <GradientStop Color="#33FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="path" Property="Opacity" Value="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="Opacity"  Value="0.8"/>
                            <Setter TargetName="shine" Property="Opacity"  Value="0.4"/>
                            <Setter TargetName="glow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="path" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- STYLE - SplitButton Glass -->
    <Style TargetType="{x:Type l:ZapSplitButtonGlass}">
        <Setter Property="Background" Value="#7F000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="MediumPurple"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapSplitButtonGlass}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="PART_Button"
                                CornerRadius="4,0,0,4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.507*"/>
                                    <RowDefinition Height="0.493*"/>
                                </Grid.RowDefinitions>

                                <ContentPresenter x:Name="PART_Content"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  Opacity="1"
                                                  Width="Auto" 
                                                  Grid.RowSpan="2" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                  Margin="{TemplateBinding Padding}" />

                                <Path x:Name="path"
                                      Visibility="Collapsed"
                                      Grid.Column="1" 
                                      Grid.RowSpan="2"
                                      Data="M0,0L3,3 6,0z" 
                                      Margin="0,2,4,0" 
                                      Stroke="{TemplateBinding Foreground}"
                                      Fill="{TemplateBinding Foreground}" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>

                                <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,0,0,4" Grid.ColumnSpan="2"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" >
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="-0.368" Y="-0.152"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#99FFFFFF" Offset="0.25"/>
                                            <GradientStop Color="#00DB8DFF" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>

                                <Border x:Name="shine" HorizontalAlignment="Stretch" Margin="0" Width="Auto" CornerRadius="3,0,0,0" Grid.ColumnSpan="2"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                            <GradientStop Color="#99FFFFFF" Offset="0"/>
                                            <GradientStop Color="#33FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>

                            </Grid>                            
                        </Border>

                        <l:ZapButtonGlass x:Name="PART_DropDown" Grid.Column="1" Margin="0" Width="16"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                          Style="{StaticResource DropDownGlassStyle}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          MouseOverBackground="{TemplateBinding MouseOverBackground}"
                                          MouseOverBorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                          MouseOverForeground="{TemplateBinding MouseOverForeground}"
                                          IsPressedBackground="{TemplateBinding IsPressedBackground}"
                                          IsPressedBorderBrush="{TemplateBinding IsPressedBorderBrush}"
                                          IsPressedForeground="{TemplateBinding IsPressedForeground}"
                                          IsPressedBackgroundOpacity="{TemplateBinding IsPressedBackgroundOpacity}"
                                          DisabledBackground="{TemplateBinding DisabledBackground}"
                                          DisabledBorderBrush="{TemplateBinding DisabledBorderBrush}"
                                          DisabledForeground="{TemplateBinding DisabledForeground}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <b:InvokeDelegateCommandAction Command="{Binding DropDownCommand, RelativeSource={RelativeSource AncestorType={x:Type l:ZapSplitButtonGlass}}}" 
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>                            
                        </l:ZapButtonGlass>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Mode" Value="Dropdown">
                            <Setter TargetName="glow" Property="CornerRadius" Value="4" />
                            <Setter TargetName="shine" Property="CornerRadius" Value="3,3,0,0" />
                            <Setter TargetName="PART_Button" Property="CornerRadius" Value="4" />
                            <Setter TargetName="PART_DropDown" Property="Visibility"  Value="Collapsed"/>
                            <Setter TargetName="path" Property="Visibility"  Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Mode" Value="DropDown"/>
                                <Condition Property="IsContextMenuOpen" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Button" Property="CornerRadius" Value="4,4,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Mode" Value="Split"/>
                                <Condition Property="IsContextMenuOpen" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Button" Property="CornerRadius" Value="4,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_Button"  Value="True">
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Button" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Button" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Content" Property="Opacity" Value="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Button" Property="Background" Value="{Binding IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Button" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Button" Property="Opacity"  Value="0.8"/>
                            <Setter TargetName="shine" Property="Opacity"  Value="0.4"/>
                            <Setter TargetName="glow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_Button" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Button" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Content" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--===================================================================================================================================================-->

    <!-- STYLE - Toggle Button Glass -->
    <Style TargetType="{x:Type l:ZapToggleButtonGlass}">
        <Setter Property="Background" Value="#7F000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="MediumPurple"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapToggleButtonGlass}">
                    <Border x:Name="PART_Border"  
                            CornerRadius="4,4,4,4"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"                        
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.507*"/>
                                    <RowDefinition Height="0.493*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="PART_Content" 
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  Opacity="1"
                                                  Width="Auto" 
                                                  Grid.RowSpan="2" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                  Margin="{TemplateBinding Padding}" />
                                <Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                    <Border.Background>
                                        <RadialGradientBrush>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                    <SkewTransform AngleX="0" AngleY="0"/>
                                                    <RotateTransform Angle="0"/>
                                                    <TranslateTransform X="-0.368" Y="-0.152"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="#7FFFFFFF" Offset="0.25"/>
                                            <GradientStop Color="#00DB8DFF" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="shine" HorizontalAlignment="Stretch" Margin="0" Width="Auto" CornerRadius="3,3,0,0"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                            <GradientStop Color="#99FFFFFF" Offset="0"/>
                                            <GradientStop Color="#33FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Grid>                         
                    </Border>                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="shine" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-180" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="shine" Property="Grid.Row" Value="1"/>
                            <Setter Property="Opacity" TargetName="shine" Value="0.6"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding IsCheckedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsCheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Opacity" TargetName="PART_Border" Value="0.8"/>
                            <Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
                        </Trigger>                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_Content" Property="Opacity" Value="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="Opacity"  Value="0.8"/>
                            <Setter TargetName="shine" Property="Opacity"  Value="0.4"/>
                            <Setter TargetName="glow" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Content" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- STYLE - Toggle Button Flat -->
    <Style TargetType="{x:Type l:ZapToggleButtonFlat}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="3" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapToggleButtonFlat}">

                    <Border x:Name="PART_Border" 
                            Margin="0" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            ClipToBounds="True">
                        <ContentPresenter x:Name="PART_Content"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Opacity="0.75" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="0.8" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding IsCheckedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsCheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="{Binding IsCheckedBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{Binding IsPressedBackground.Color, RelativeSource={RelativeSource TemplatedParent}}" 
                                                     Opacity="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- STYLE - Toggle Button Round -->
    <Style TargetType="{x:Type l:ZapToggleButtonRound}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ZapToggleButtonRound}">
                    <Grid>
                        <!-- Background Layer -->
                        <Ellipse Name="background" 
                                 Fill="{TemplateBinding Background}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                 UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                        <!-- Reflection Layer -->
                        <Path x:Name="ReflectionLayer"
                              VerticalAlignment="Top"
                              Stretch="Fill"
                              MinHeight="{TemplateBinding MinHeight}"
                              MinWidth="{TemplateBinding MinWidth}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="0.5" />
                            </Path.RenderTransform>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                        <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="75.860,47.685" Point2="69.111,45.196" Point3="50.167,45.196"/>
                                        <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="7.469,52.580" Point2="1.000,53.252" Point3="1.000,44.999"/>
                                        <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="9.106,14.370" Point2="27.875,0" Point3="50,0"/>
                                        <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
                                        <BezierSegment IsSmoothJoin="True" Point1="99.139,39.369" Point2="98.999,40.084" Point3="98.999,45.499"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                            <Path.Fill>
                                <RadialGradientBrush GradientOrigin="0.498,0.526">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                            <TranslateTransform X="0" Y="0.5"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                    <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                    <GradientStop Offset="0" Color="#00000000"/>
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                        <!-- Refraction Layer -->
                        <Ellipse x:Name="RefractionLayer"
                                 StrokeThickness="{Binding Path=BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                 Stroke="{TemplateBinding BorderBrush}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Ellipse.Fill>
                                <RadialGradientBrush GradientOrigin="0.496,1.052">
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    <GradientStop Offset="1" Color="#00000000"/>
                                    <GradientStop Offset="0.4" Color="#FFFFFFFF"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!-- ContentPresenter -->
                        <ContentPresenter Name="PART_Content" 
                                          Margin="5,2,5,0"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="background" Property="Fill" Value="{Binding IsCheckedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding IsCheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="RefractionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#CCFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#66FFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="background" Property="Fill" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="RefractionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.45" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#BBFFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Content" Property="Opacity" Value="{Binding IsPressedBackgroundOpacity, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="background" Property="Fill" Value="{Binding IsPressedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding IsPressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground" Value="{Binding IsPressedForeground, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="RefractionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ReflectionLayer" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#CCFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#66FFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="background" Property="Fill" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="RefractionLayer" Property="Stroke" Value="{Binding DisabledBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="{Binding DisabledForeground, RelativeSource={RelativeSource Self}}" />
                            <Setter TargetName="PART_Content" Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>