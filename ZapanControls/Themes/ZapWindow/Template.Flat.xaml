<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:r="clr-namespace:ZapanControls.Controls.ResourceKeys"
                    xmlns:z="clr-namespace:ZapanControls.Controls"
                    xmlns:c="clr-namespace:ZapanControls.Converters">

    <Grid x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type r:ZapButtonResourceKeys}, ResourceId=WindowTemplate}" 
          HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,0,0,1">
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="ZapWindowBoolToVis" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <z:ZapButton x:Name="btnMinimize" 
                     Grid.Column="0" 
                     Focusable="False"
                     Background="Transparent"
                     BorderBrush="Transparent"
                     FocusedBackground="#BF808080"
                     FocusedBorderBrush="#BF808080"
                     PressedBackground="#BF404040"
                     PressedBorderBrush="#BF404040"
                     Visibility="{Binding ShowMinimizeButton, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={StaticResource ZapWindowBoolToVis}}"
                     Width="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*1.45'}">
            <Viewbox Width="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*0.5'}" 
                     Height="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*0.5'}">
                <Canvas Width="24" Height="24">
                    <Path Fill="White" Data="M20,14H4V10H20" />
                </Canvas>
            </Viewbox>
            <z:ZapButton.Style>
                <Style TargetType="{x:Type z:ZapButton}">
                    <Setter Property="Opacity" Value="0.5" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </z:ZapButton.Style>
        </z:ZapButton>

        <z:ZapButton x:Name="btnRestore" 
                     Grid.Column="1" 
                     Focusable="False"
                     Background="Transparent"
                     BorderBrush="Transparent"
                     FocusedBackground="#BF808080"
                     FocusedBorderBrush="#BF808080"
                     PressedBackground="#BF404040"
                     PressedBorderBrush="#BF404040"
                     Visibility="{Binding ShowMaximizeButton, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={StaticResource ZapWindowBoolToVis}}"
                     Width="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*1.45'}">
            <Viewbox Width="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*0.5'}" 
                     Height="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*0.5'}">
                <Canvas Width="24" Height="24">
                    <Path x:Name="pathMaximize" Fill="White">
                        <Path.Style>
                            <Style TargetType="{x:Type Path}">
                                <Setter Property="Data" Value="M4,4H20V20H4V4M6,8V18H18V8H6Z" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}}" Value="Maximized">
                                        <Setter Property="Data" Value="M4,8H8V4H20V16H16V20H4V8M16,8V14H18V6H10V8H16M6,12V18H14V12H6Z" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Canvas>
            </Viewbox>
            <z:ZapButton.Style>
                <Style TargetType="{x:Type z:ZapButton}">
                    <Setter Property="Opacity" Value="0.5" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </z:ZapButton.Style>
        </z:ZapButton>

        <z:ZapButton x:Name="btnClose" 
                     Grid.Column="2" 
                     Focusable="False"
                     Background="Transparent"
                     BorderBrush="Transparent"
                     FocusedBackground="Red"
                     FocusedBorderBrush="Red"
                     PressedBackground="DarkRed"
                     PressedBorderBrush="DarkRed"
                     IsEnabled="{Binding CanBeClosed, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}}"
                     Visibility="{Binding ShowCloseButton, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={StaticResource ZapWindowBoolToVis}}"
                     Width="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*1.45'}">
            <Viewbox Width="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*0.5'}" 
                     Height="{Binding TitleBarHeight, RelativeSource={RelativeSource AncestorType={x:Type z:ZapWindow}}, Converter={c:MathConverter}, ConverterParameter='@VALUE*0.5'}">
                <Canvas Width="24" Height="24">
                    <Path Fill="White" Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z" />
                </Canvas>
            </Viewbox>
            <z:ZapButton.Style>
                <Style TargetType="{x:Type z:ZapButton}">
                    <Setter Property="Opacity" Value="0.5" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </z:ZapButton.Style>
        </z:ZapButton>
        
    </Grid>

</ResourceDictionary>